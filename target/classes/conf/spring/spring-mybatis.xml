<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
">
    <!-- 配置数据源 Druid-->
    
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
    <!-- 基本属性 url、user、password -->
    <property name="url" value="${jdbc_url}" />
    <property name="username" value="${jdbc_user}" />
    <property name="password" value="${jdbc_password}" />
    <!-- 配置初始化大小、最小、最大 -->
    <property name="initialSize" value="30" />
    <property name="minIdle" value="10" /> 
    <property name="maxActive" value="80" />
    <!-- 配置获取连接等待超时的时间 -->
    <property name="maxWait" value="60000" />
    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="60000" />
    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="300000" />
    <property name="testWhileIdle" value="true" />
	<property name="validationQuery" value="SELECT 'X'" />
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />
	
	<!-- 通过dataSource获取的连接必须在 removeAbandonedTimeout 秒内被调用,否则被移除 -->
	<property name="removeAbandoned" value="true" />
	<!-- 单位是秒 -->
 	<property name="removeAbandonedTimeout" value="1800" />
    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
    <property name="poolPreparedStatements" value="true" />
    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
    <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
    <property name="filters" value="stat" /> 
</bean>
    <!-- 事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- HostJDBCDao-->
	<bean id="HostJDBCDao" class="com.smarthome.platform.monitor.dao.HostJDBCDao">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 开启注解   @Transation-->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<!-- myBatis文件  配置文件-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- ** 表示多级目录 -->
		<property name="mapperLocations" value="classpath:com/smarthome/platform/**/*.xml" />
	</bean>
	<!-- 能够直接将接口转换成Dao操作类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.smarthome.platform" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	



</beans>